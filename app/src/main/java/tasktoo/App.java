/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tasktoo;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

public class App {
    public static void main(String[] args) {
        try {
            File file = new File("src/main/resources/data.xml");
            JAXBContext jaxbContext = JAXBContext.newInstance(Records.class);
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
            Records records = (Records) jaxbUnmarshaller.unmarshal(file);

            Scanner scanner = new Scanner(System.in);
            System.out.println("Please select the fields you would like to see for each record, your options are: Name, Postal Zip, Region, Country, Address, List");
            String input = scanner.nextLine();
            String[] fields = input.split(",");

            List<String> selectedFields = new ArrayList<>();
            for (String field : fields) {
                selectedFields.add(field.trim().toLowerCase());
            }

            List<String> outputList = new ArrayList<>();
            for (Record record : records.getRecords()) {
                StringBuilder stringBuilder = new StringBuilder();
                for (String selectedField : selectedFields) {
                    switch (selectedField) {
                        case "name":
                            stringBuilder.append("\"name\": \"").append(record.getName()).append("\", ");
                            break;
                        case "postal zip":
                            stringBuilder.append("\"postalZip\": \"").append(record.getPostalZip()).append("\", ");
                            break;
                        case "region":
                            stringBuilder.append("\"region\": \"").append(record.getRegion()).append("\", ");
                            break;
                        case "country":
                            stringBuilder.append("\"country\": \"").append(record.getCountry()).append("\", ");
                            break;
                        case "address":
                            stringBuilder.append("\"address\": \"").append(record.getAddress()).append("\", ");
                            break;
                        case "list":
                            stringBuilder.append("\"list\": \"").append(record.getList()).append("\", ");
                            break;
                    }
                }
                if (stringBuilder.length() > 2) {
                    outputList.add("{ " + stringBuilder.substring(0, stringBuilder.length() - 2) + " }");
                }
            }

            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            String outputJson = gson.toJson(outputList);

            try (FileWriter writer = new FileWriter("output.json")) {
                writer.write(outputJson);
            } catch (IOException e) {
                e.printStackTrace();
            }

        } catch (JAXBException e) {
            e.printStackTrace();
        }
    }
}
